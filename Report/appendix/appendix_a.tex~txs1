\chapter{Rules \label{appendix:rules}}
The robots that participate in the kidsize competition must respect the following characteristics:\begin{enumerate}
\item $40cm \leq H_{top} \leq 90cm$.

\item Maximum allowed weight is $20kg$.

\item Each foot must fit into a rectangle of area
$(2.2 \cdot H_{com})^2/32$.

\item Considering the rectangle enclosing the convex hull of the foot, the ratio between the longest side of the rectangle and the shortest one, shall not exceed $2.5$.

\item The robot must fit into a cylinder of diameter $0.55 \cdot H_{top}$.

\item The sum of the lengths of the two arms and the width of the torso at the shoulder must be less than $1.2\cdot H_{top}$. The length of an arm is defined as the sum of the maximum length of any link that forms part of the arm. Both arms must be the same length.

\item The robot does not possess a configuration where it is extended longer than $1.5 \cdot H_{top}$.

\item The length of the legs $H_{leg}$, including the feet, satisfies $0.35 \cdot H_{top} \leq H_{leg} \leq 0.7 \cdot H_{top}$.

\item The height of the head $H_{head}$, including the neck, satisfies $0.05 \cdot H_{top} \leq H_{head} \leq 0.25 \cdot H_{top}$. $H_{head}$ is defined as the vertical distance from the axis of the first arm
joint at the shoulder to the top of the head.

\item The leg length is measured while the robot is standing up straight. The length is measured from the first rotating joint where its axis lies in the plane parallel to the standing ground to the tip of the foot.
\end{enumerate}

Source: \cite{robocup_rules}.

\chapter{Design guidelines}
For a dynamic simulation several design restrictions must be considered: \begin{itemize}
\item use pure convex as much as possible, they are much more stable and faster to simulate. When a more complex shape is used, approximate it with several convex shapes.

\item use reasonable sizes, neither not too small nor too big. Thin shapes may behave strangely.

\item when using joints, keep the ratio of the masses below 10. Otherwise, the joint may have large orientation/position errors.
\end{itemize}

\chapter{Control code of the servomotor inside V-Rep}
\begin{lstlisting}[language={[5.0]Lua}, numbers = left, tabsize = 4, frame=single,breaklines, keywordstyle=\color{blue}, label={lst:servo}, captionpos = b]
if not PID_P then
    PID_P=0.1
    PID_I=0
end

if init then
    pidCumulativeError=0
end
ctrl = errorValue*PID_P

if PID_I ~=0 then
    pidCumulativeError = pidCumulativeError+errorValue*dynStepSize
else
    pidCumulativeError=0
end

ctrl = ctrl + pidCumulativeError*PID_I

velocityToApply = ctrl/dynStepSize
if (velocityToApply > velUpperLimit) then
    velocityToApply = velUpperLimit
end
if (velocityToApply < -velUpperLimit) then
    velocityToApply = -velUpperLimit
end
forceOrTorqueToApply = maxForceTorque

return forceOrTorqueToApply, velocityToApply
\end{lstlisting}

\chapter{Minimal simulation control code}
\lstinputlisting[style=Matlab-editor, captionpos=b, caption={Minimal example code that connects to the server, gets the handles and implements a basic simulation control loop.}]{codes/simulation_client_vrep.m}
\clearpage

\lstinputlisting[style=Matlab-editor, captionpos=b, caption={Function that handles the sending of target angles to joints.}]{codes/send_instructions.m}
\clearpage

\lstinputlisting[style=Matlab-editor, captionpos=b, caption={Function that retrieves the handles to the joints and the cameras.}]{codes/robot_init.m}

\chapter{Routines}
\lstinputlisting[style=Matlab-editor, captionpos=b, caption={Routine that flips the robot from a supine to a prone position.}, label={code:go_prone}]{codes/go_prone.m}
\clearpage

\lstinputlisting[style=Matlab-editor, captionpos=b, caption={Routine that makes the robot stand up from a prone position.}, label={code:stand_prone}]{codes/standup_prone.m}